name: Deploy-to-EC2 instance

# Trigger deployment only on push to main branch 
on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Push to EC2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v1

      - name: Deploy to my EC2 instance
        uses: easingthemes/ssh-deploy@v2.1.5
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          SOURCE: "./"
          REMOTE_HOST: ${{ secrets.HOST_DNS }}
          REMOTE_USER: ${{ secrets.USERNAME }}
          TARGET: ${{ secrets.TARGET_DIR }}

      - name: Executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DNS }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # install nginx
            sudo apt install curl gnupg2 ca-certificates lsb-release ubuntu-keyring
            curl https://nginx.org/keys/nginx_signing.key | gpg --dearmor | sudo tee /usr/share/keyrings/nginx-archive-keyring.gpg >/dev/null
            gpg --dry-run --quiet --no-keyring --import --import-options import-show /usr/share/keyrings/nginx-archive-keyring.gpg
            echo "deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] http://nginx.org/packages/ubuntu `lsb_release -cs` nginx" | sudo tee /etc/apt/sources.list.d/nginx.list
            echo -e "Package: *\nPin: origin nginx.org\nPin: release o=nginx\nPin-Priority: 900\n" | sudo tee /etc/apt/preferences.d/99nginx
            sudo apt update
            sudo apt install nginx
            # install app
            cd /home/ubuntu/app
            source ./env/bin/activate
            pip install -r requirements.txt
            # run gunicorn
            gunicorn --config ./gunicorn.conf.py cs_421_a1.wsgi:application
            # setup nginx server
            sudo systemctl stop nginx #stop nginx before changing configuration.
            sudo rm /etc/nginx/conf.d/app.conf #remove old configuration.
            echo "server {
                listen 80;
                server_name ${{ secrets.HOST_DNS }};

                location = /favicon.ico { access_log off; log_not_found off; }
                location /static/ {
                    root /home/ubuntu/app;
                }

                location / {
                    proxy_pass http://127.0.0.1:8000;
                    proxy_set_header Host $host;
                    proxy_set_header X-Real-IP $remote_addr;
                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto $scheme;
                }
            }" | sudo tee /etc/nginx/conf.d/app.conf
            sudo systemctl restart nginx
            
